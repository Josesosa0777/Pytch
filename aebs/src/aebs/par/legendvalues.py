"""
:Organization: Knorr-Bremse SfN GmbH T/DE Budapest Schwieberdingen T/HEE2
:Copyright: 
  Knorr-Bremse SfN GmbH reserves all rights even in the event of industrial 
  property. We reserve all rights of disposal such as copying and passing on to 
  third parties.

The module defines legend and display style for every single group type.
"""

__docformat__ = "restructuredtext en"

import grouptypes as gtps

MS = 10  # default marker size
MEW = 1  # default marker edge width
MEC = "k"  # default marker edge color
MFC = "None"  # default marker face color (transparent)
COL = "k"  # default color
LS = ""  # default line style
LW = 1  # default line width
ALP = 1.0  # default alpha channel value

GRY = (200.0 / 256.0, 200.0 / 256.0, 200.0 / 256.0)  # GRAY color
YEL = (255.0 / 256.0, 255.0 / 256.0, 0.0)  # YELLOW color
MAGENTA = (255.0 / 256.0, 0.0, 255.0 / 256.0) # MAGENTA color

SOUND_LINES = r"$\|\cdot\ \ \ \ \cdot\|$"
INTRO = r"$]\ \ \ \ \ \ [$"
GREATER_LESS_THAN = r"$>\ \ \ \ \ \ <$"
Y = r"$Y$"

LegendValues = {
    "LRR3_FUS_MOV": (
        "LRR3_FUS - Moving",
        dict(
            marker="s",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "INTROS": (
        "Intros",
        dict(
            marker=r"$\boxplus$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_FUS_STAT": (
        "LRR3_FUS - Stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_ATS_MOV": (
        "CVR3_ATS - Moving",
        dict(
            marker="D",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_ATS_STAT": (
        "CVR3_ATS - Stationary",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_MOV": (
        "FLR20 - Moving",
        dict(
            marker="^",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_STAT": (
        "FLR20 - Stationary",
        dict(
            marker="+",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_AEB": (
        "FLR20 AEB track",
        dict(
            marker=INTRO,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_ACC": (
        "FLR20 ACC track",
        dict(
            marker=GREATER_LESS_THAN,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_FUSED_MOV": (
        "FLR20 - Fused moving",
        dict(
            marker="^",
            ms=MS,
            mew=MEW * 2,
            mec="m",
            mfc="m",
            color="m",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_FUSED_STAT": (
        "FLR20 - Fused stationary",
        dict(
            marker="+",
            ms=MS,
            mew=MEW * 2,
            mec="m",
            mfc="m",
            color="m",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_RADAR_ONLY_MOV": (
        "FLR20 - Radar-only moving",
        dict(
            marker="^",
            ms=MS,
            mew=MEW * 2,
            mec="k",
            mfc="k",
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_RADAR_ONLY_STAT": (
        "FLR20 - Radar-only stationary",
        dict(
            marker="+",
            ms=MS,
            mew=MEW * 2,
            mec="k",
            mfc="k",
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_AEBS_WARNING_KB": (
        "FLR20 AEBS Warning - KB",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_AEBS_WARNING_TRW": (
        "FLR20 AEBS Warning - TRW",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_AEBS_WARNING_FLR20": (
        "FLR20 AEBS Warning - FLR20",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_AEBS_WARNING_AUTOBOX": (
        "FLR20 AEBS Warning - AUTOBOX",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_AEBS_WARNING_SIL": (
        "FLR20 AEBS Warning - SIL",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR20_TARGET": (
        "FLR20 target",
        dict(
            marker="o",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_MOV": (
        "FLR25 - Moving",
        dict(
            marker="D",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_STOPPED": (
        "FLR25 - Stopped",
        dict(
            marker="D",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_STAT": (
        "FLR25 - Stationary",
        dict(
            marker="o",
            ms=MS * 1.5,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_AEB": (
        "FLR25 AEB track",
        dict(
            marker=INTRO,
            ms=MS * 1.5,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_AEBS_FIRST_OBJ": (
        "FLC25_AEBS_FIRST_OBJ track",
        dict(
                marker = INTRO,
                ms = MS * 1.5,
                mew = MEW * 2,
                mec = MEC,
                mfc = MFC,
                color = COL,
                ls = LS,
                lw = LW,
                alpha = ALP,
        ),
    ),
    "FLC25_AEBS_SECOND_OBJ": (
        "FLC25_AEBS_SECOND_OBJ track",
        dict(
                marker = "o",
                ms = MS * 1.5,
                mew = MEW * 2,
                mec = MEC,
                mfc = MFC,
                color = COL,
                ls = LS,
                lw = LW,
                alpha = ALP,
        ),
    ),
    "FLC25_AEBS_THIRD_OBJ": (
        "FLC25_AEBS_THIRD_OBJ track",
        dict(
                marker = "^",
                ms = MS * 1.5,
                mew = MEW * 2,
                mec = MEC,
                mfc = MFC,
                color = COL,
                ls = LS,
                lw = LW,
                alpha = ALP,
        ),
    ),
    "FLC25_MLAEB_LEFT_FIRST_OBJ": (
            "FLC25_MLAEB_LEFT_FIRST_OBJ track",
            dict(
                    marker = "H",
                    ms = MS * 1.5,
                    mew = MEW * 2,
                    mec = MEC,
                    mfc = MFC,
                    color = COL,
                    ls = LS,
                    lw = LW,
                    alpha = ALP,
            ),
        ),
    "FLC25_MLAEB_LEFT_SECOND_OBJ": (
            "FLC25_MLAEB_LEFT_SECOND_OBJ track",
            dict(
                    marker = "D",
                    ms = MS * 1.5,
                    mew = MEW * 2,
                    mec = MEC,
                    mfc = MFC,
                    color = COL,
                    ls = LS,
                    lw = LW,
                    alpha = ALP,
            ),
        ),
    "FLC25_MLAEB_LEFT_THIRD_OBJ": (
            "FLC25_MLAEB_LEFT_THIRD_OBJ track",
            dict(
                    marker = "s",
                    ms = MS * 1.5,
                    mew = MEW * 2,
                    mec = MEC,
                    mfc = MFC,
                    color = COL,
                    ls = LS,
                    lw = LW,
                    alpha = ALP,
            ),
        ),
    "FLC25_MLAEB_RIGHT_FIRST_OBJ": (
            "FLC25_MLAEB_RIGHT_FIRST_OBJ track",
            dict(
                    marker = "+",
                    ms = MS * 1.5,
                    mew = MEW * 2,
                    mec = MEC,
                    mfc = MFC,
                    color = COL,
                    ls = LS,
                    lw = LW,
                    alpha = ALP,
            ),
        ),
    "FLC25_MLAEB_RIGHT_SECOND_OBJ": (
            "FLC25_MLAEB_RIGHT_SECOND_OBJ track",
            dict(
                    marker = "x",
                    ms = MS * 1.5,
                    mew = MEW * 2,
                    mec = MEC,
                    mfc = MFC,
                    color = COL,
                    ls = LS,
                    lw = LW,
                    alpha = ALP,
            ),
        ),
    "FLC25_MLAEB_RIGHT_THIRD_OBJ": (
            "FLC25_MLAEB_RIGHT_THIRD_OBJ track",
            dict(
                    marker = "v",
                    ms = MS * 1.5,
                    mew = MEW * 2,
                    mec = MEC,
                    mfc = MFC,
                    color = COL,
                    ls = LS,
                    lw = LW,
                    alpha = ALP,
            ),
        ),
    "FLR25_AEB_RESIM": (
        "FLR25 AEB resim track",
        dict(
            marker="^",
            ms=MS * 1.5,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="y",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_AEB_RETEST_RESIM": (
        "FLR25 AEB retest resim track",
        dict(
            marker="^",
            ms=MS * 1.5,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="g",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_AEB_BASELINE_RESIM": (
        "FLR25 AEB baseline resim track",
        dict(
            marker="o",
            ms=MS * 1.5,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_ACC_PED": (
        "FLR25_ACC_PED - Stopped",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_ACC_PED_STOP": (
        "FLR25_ACC_PED - Stopped",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_ACC_MOV": (
        "FLR25_ACC - Moving",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="g",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_ACC_STOPPED": (
        "FLR25_ACC - Stopped",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_ACC_STAT": (
        "FLR25_ACC - Stationary",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_ACC_GO_SUPP_PED_MOV": (
        "FLR25_ACC_GO_SUPP_PED - Moving",
        dict(
            marker=r"$\dag$",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="g",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_ACC_GO_SUPP_PED_STOPPED": (
        "FLR25_ACC_GO_SUPP_PED - Stopped",
        dict(
            marker=r"$\dag$ ",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLR25_ACC_GO_SUPP_PED_STAT": (
        "FLR25_ACC_GO_SUPP_PED - Stationary",
        dict(
            marker=r"$\dag$  ",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_MOV": (
        "AC100    - Moving",
        dict(
            marker="^",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_STAT": (
        "AC100    - Stationary",
        dict(
            marker="+",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_ACC": (
        "AC100_Track - SameLane_near",
        dict(
            marker="D",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_IIV": (
        "AC100_Track - SameLane_far",
        dict(
            marker="D",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_NIV_L": (
        "AC100_Track - LeftLane_near",
        dict(
            marker="D",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_NIV_R": (
        "AC100_Track - RightLane_near",
        dict(
            marker="D",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_CW": (
        "AC100_Warning - Coll. warning",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_CO": (
        "AC100_Warning - Coll. object",
        dict(
            marker=INTRO,
            ms=MS * 2,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_STAT_TARGET": (
        "AC100_TargetFlag - STAT",
        dict(
            marker="o",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_AMBIGUOUS": (
        "AC100_TargetFlag - AMBIGUOUS",
        dict(
            marker="o",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_WEAK_DET": (
        "AC100_TargetFlag - WEAK_DET",
        dict(
            marker="o",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_WEAK_PARTNER": (
        "AC100_TargetFlag - WEAK_PARTNER",
        dict(
            marker="o",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_PHI_ERROR": (
        "AC100_TargetFlag - PHI_ERROR",
        dict(
            marker="o",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_UNCONF": (
        "AC100_TargetStatus - UNCONF",
        dict(
            marker="v",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_PARTIAL": (
        "AC100_TargetStatus - PARTIAL",
        dict(
            marker="v",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_SHADED": (
        "AC100_TargetStatus - SHADED",
        dict(
            marker="v",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_CONF": (
        "AC100_TargetStatus - CONF",
        dict(
            marker="v",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_POSITION": (
        "AC100_TrackingFlag - POS",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_CLOSE_TO_ACC": (
        "AC100_TrackingFlag - CLOSE_TO_ACC",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_BEHIND_CBR": (
        "AC100_TrackingFlag - BEHIND_CBR",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_CLOSE_LOWPWR": (
        "AC100_TrackingFlag - CLOSE_LOWPWR",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_FREQ": (
        "AC100_TrackingFlag - FREQ",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_CLOSE_TO_TRACK": (
        "AC100_TrackingFlag - CLOSE_TO_TRACK",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC20_MOV": (
        "FLC20 - Moving",
        dict(
            marker="o",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc="g",
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC20_STAT": (
        "FLC20 - Stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_TSR_STAT": (
        "FLC25 TSR - Stationary",
        dict(
            marker="o",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_TSR_SHORTLISTED_STAT": (
        "FLC25 TSR SHORTLISTED - Stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_CEM_TPF_MOV": (
        "FLC25_CEM_TPF - Moving",
        dict(
            marker="s",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_CEM_TPF_STAT": (
        "FLC25_CEM_TPF - Stationary",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_CEM_TPF_MG_AOA_ACC_MOV" : (
        "FLC25_CEM_TPF_MG_AOA_ACC - Moving",
        dict(
            marker = "s",
            ms = MS,
            mew = MEW * 2,
            mec = MEC,
            mfc = MFC,
            color = "b",
            ls = LS,
            lw = LW,
            alpha = ALP,
        ),
    ),
    "FLC25_CEM_TPF_MG_AOA_ACC_STAT": (
        "FLC25_CEM_TPF_MG_AOA_ACC - Stationary",
        dict(
            marker = "v",
            ms = MS,
            mew = MEW * 2,
            mec = MEC,
            mfc = MFC,
            color = "r",
            ls = LS,
            lw = LW,
            alpha = ALP,
        ),
    ),
    "FLC25_CAN_MOV": (
        "FLC25_CAN - Moving",
        dict(
            marker="H",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_CAN_STAT": (
        "FLC25_CAN - Stationary",
        dict(
            marker=r"$N$",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_ARS_FCU_MOV": (
        "FLC25_ARS_FCU - Moving",
        dict(
            marker=r"$\cdot\widehat{\bullet\cdot\bullet}\cdot$",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_ARS_FCU_STAT": (
        "FLC25_ARS_FCU - Stationary",
        dict(
            marker="2",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_ARS620_MOV": (
        "FLC25_ARS620 - Moving",
        dict(
            marker=r"s",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_ARS620_STAT": (
        "FLC25_ARS620 - Stationary",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_EM_MOV": (
        "FLC25_EM - Moving",
        dict(
            marker="s",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_EM_STAT": (
        "FLC25_EM - Stationary",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_AOAOUTPUT_MOV": (
        "FLC25_PAEBS_AOAOUTPUT - Moving",
        dict(
            marker="s",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_AOAOUTPUT_MOV_RESIM": (
        "FLC25_PAEBS_AOAOUTPUT_RESIM - Moving",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=MAGENTA,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_AOAOUTPUT_STAT": (
        "FLC25_PAEBS_AOAOUTPUT - Stationary",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_AOAOUTPUT_STAT_RESIM": (
        "FLC25_PAEBS_AOAOUTPUT_RESIM - Stationary",
        dict(
            marker="$N$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_DEBUG_PED_CROSS": (
        "FLC25_PAEBS_DEBUG - Pedestrian Crossing",
        dict(
            marker="d",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc='r',
            color='r',
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_DEBUG_PED_NOT_CROSS": (
        "FLC25_PAEBS_DEBUG - Pedestrian NOT Crossing",
        dict(
            marker="d",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_DEBUG_BIC_CROSS": (
        "FLC25_PAEBS_DEBUG - Bicyclist Crossing",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc='r',
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_DEBUG_BIC_NOT_CROSS": (
        "FLC25_PAEBS_DEBUG - Bicyclist NOT Crossing",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_DEBUG_UNDEFINED": (
        "FLC25_PAEBS_DEBUG - Undefined",
        dict(
            marker="$?$",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color='k',
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),

    "FLC25_PAEBS_LAUSCH_PED_CROSS": (
        "FLC25_PAEBS_LAUSCH - Pedestrian Crossing",
        dict(
            marker="p",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc='r',
            color='r',
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_LAUSCH_PED_NOT_CROSS": (
        "FLC25_PAEBS_LAUSCH - Pedestrian NOT Crossing",
        dict(
            marker="p",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_LAUSCH_UNDEFINED": (
        "FLC25_PAEBS_LAUSCH - Undefined",
        dict(
            marker="$L?$",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color='k',
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    
    "FLC25_PAEBS_CAN_MOV": (
        "FLC25_PAEBS_CAN - Moving",
        dict(
            marker="s",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_PAEBS_CAN_STAT": (
        "FLC25_PAEBS_CAN - Stationary",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_AOA_AEBS_MOV": (
        "FLC25_AOA_AEBS - Moving",
        dict(
            marker="s",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_AOA_AEBS_STAT": (
        "FLC25_AOA_AEBS - Stationary",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_AOA_ACC_MOV": (
        "FLC25_AOA_ACC - Moving",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FLC25_AOA_ACC_STAT": (
        "FLC25_AOA_ACC - Stationary",
        dict(
            marker="^",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "GT_FREEBOARD_STAT": (
        "GROUND_TRUTH_FREEBOARD-State",
        dict(
            marker="o",
            ms=MS * 1.5,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "GT_DELTA_STAT": (
        "GROUND_TRUTH_DELTA-State",
        dict(
            marker="H",
            ms=MS * 1.5,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "SLR25_RFB_MOV" : (
        "SLR25_RFB - Moving",
        dict(
                marker = "s",
                ms = MS,
                mew = MEW * 2,
                mec = MEC,
                mfc = MFC,
                color = "b",
                ls = LS,
                lw = LW,
                alpha = ALP,
        ),
    ),
    "SLR25_RFB_STAT": (
        "SLR25_RFB"
        " - Stationary",
        dict(
                marker = "v",
                ms = MS,
                mew = MEW * 2,
                mec = MEC,
                mfc = MFC,
                color = "r",
                ls = LS,
                lw = LW,
                alpha = ALP,
        ),
    ),
"SLR25_RFF_MOV" : (
        "SLR25_RFF - Moving",
        dict(
                marker = "s",
                ms = MS,
                mew = MEW * 2,
                mec = MEC,
                mfc = MFC,
                color = "b",
                ls = LS,
                lw = LW,
                alpha = ALP,
        ),
    ),
    "SLR25_RFF_STAT": (
        "SLR25_RFF"
        " - Stationary",
        dict(
                marker = "v",
                ms = MS,
                mew = MEW * 2,
                mec = MEC,
                mfc = MFC,
                color = "r",
                ls = LS,
                lw = LW,
                alpha = ALP,
        ),
    ),
    "SLR25_Front_MOV" : (
        "SLR25_Front - Moving",
        dict(
                marker = "s",
                ms = MS,
                mew = MEW * 2,
                mec = MEC,
                mfc = MFC,
                color = "b",
                ls = LS,
                lw = LW,
                alpha = ALP,
        ),
    ),
    "SLR25_Front_STAT": (
        "SLR25_Front"
        " - Stationary",
        dict(
                marker = "v",
                ms = MS,
                mew = MEW * 2,
                mec = MEC,
                mfc = MFC,
                color = "r",
                ls = LS,
                lw = LW,
                alpha = ALP,
        ),
    ),

    "SCAM_MOV": (
        "S-Cam - Moving",
        dict(
            marker="o",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "SCAM_STAT": (
        "S-Cam - Stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_TYRE": (
        "AC100_TrackingFlag - TYRE",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "AC100_SEC_PHI_ERR": (
        "AC100_TrackingFlag - SEC_PHI_ERR",
        dict(
            marker="x",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "ESR_MOV": (
        "ESR      - Moving",
        dict(
            marker="H",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "ESR_STAT": (
        "ESR      - Stationary",
        dict(
            marker=r"$\bot$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "IBEO_STAT": (
        "IBEO     - Stationary",
        dict(
            marker=r"$\vee$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "IBEO_MOV": (
        "IBEO     - Moving",
        dict(
            marker=r"$\boxdot$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "VFP_MOV": (
        "VFP      - Moving",
        dict(
            marker=r"$\Bumpeq$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "VFP_STAT": (
        "VFP      - Stationary",
        dict(
            marker=r"$\cap$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "VFP_PEDESTRIAN": (
        "VFP      - Pedestrian",
        dict(
            marker=r"$\.\barwedge$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "ITERIS": (
        "Iteris   - Moving",
        dict(
            marker=r"$\between$",
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "MOBILEYE": (
        "MobilEye - Moving",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_SIT_MOV": (
        "LRR3_SIT - Moving",
        dict(
            marker=r"$\bowtie$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_SIT_STAT": (
        "LRR3_SIT - Stationary",
        dict(
            marker="$N$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_LOC_VALID": (
        "CVR3_LOC - Valid",
        dict(
            marker="2",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_LOC_INVALID": (
        "CVR3_LOC - Invalid",
        dict(
            marker="2",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_OHL_MOV": (
        "CVR3_OHL - Moving",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_OHL_STAT": (
        "CVR3_OHL - Stationary",
        dict(
            marker="1",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_POS_MOV": (
        "CVR3_POS - Moving",
        dict(
            marker=r"$\cdot\widehat{\bullet\cdot\bullet}\cdot$",
            ms=MS * 2,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_POS_STAT": (
        "CVR3_POS - Stationary",
        dict(
            marker="$P$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_POS_INTRO": (
        "CVR3_POS - Intro",
        dict(
            marker=INTRO,
            ms=MS * 2,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color="m",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_POS_MOV": (
        "LRR3_POS - Moving",
        dict(
            marker=r"$\cdot\widehat{\bullet\cdot\bullet}\cdot$",
            ms=MS * 2,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_POS_STAT": (
        "LRR3_POS - Stationary",
        dict(
            marker="$P$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_OHL_MOV": (
        "LRR3_OHL - Moving",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_OHL_STAT": (
        "LRR3_OHL - Stationary",
        dict(
            marker="1",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_SIT_MOV": (
        "CVR3_SIT - Moving",
        dict(
            marker=r"$\bowtie$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_SIT_STAT": (
        "CVR3_SIT - Stationary",
        dict(
            marker="$N$",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_ATS_MOV": (
        "LRR3_ATS - Moving",
        dict(
            marker="D",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_ATS_STAT": (
        "LRR3_ATS - Stationary",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_FUS_FUSED_MOV": (
        "CVR3_FUS - Fused moving",
        dict(
            marker="s",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_FUS_RADAR_ONLY_MOV": (
        "CVR3_FUS - Radar-only moving",
        dict(
            marker="s",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_FUS_VIDEO_ONLY_MOV": (
        "CVR3_FUS - Camera-only moving",
        dict(
            marker="s",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_FUS_FUSED_STAT": (
        "CVR3_FUS - Fused stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_FUS_RADAR_ONLY_STAT": (
        "CVR3_FUS - Radar-only stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_FUS_VIDEO_ONLY_STAT": (
        "CVR3_FUS - Camera-only stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_FUS_VID": (
        "CVR3_FUS - Video",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_LOC_INVALID": (
        "LRR3_LOC - Invalid",
        dict(
            marker="2",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_LOC_VALID": (
        "LRR3_LOC - Valid",
        dict(
            marker="2",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_ASF_BRAKE": (
        "LRR3_ASF - Brake",
        dict(
            marker="o",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc="r",
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_ASF_WARNING": (
        "LRR3_ASF - Warning",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CVR3_ASF_WARNING": (
        "CVR3_ASF - Warning",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "LRR3_ASF_VIDEOCONF": (
        "LRR3_ASF - Video confirmation",
        dict(
            marker=r"$[\ ]$",
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "SDF_LRR3_CVR3_OHL": (
        "SDF_LRR3_CVR3_OHL",
        dict(
            marker="v",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "SDF_CVR3_SCAM_CIPV": (
        "SDF_CVR3_SCAM_CIPV",
        dict(
            marker="$c$",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc="r",
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "SDF_CVR3_SCAM_STAT": (
        "SDF_CVR3_SCAM - Stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc="r",
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "SDF_CVR3_SCAM_MOV": (
        "SDF_CVR3_SCAM - Moving",
        dict(
            marker="d",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc="r",
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "MBL2_TARGET": (
        "MBL2 Target",
        dict(
            marker="2",
            ms=MS,
            mew=MEW * 2,
            mec="g",
            mfc="g",
            color="g",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "MBL2_TRACK": (
        "MBL2 Track",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec="b",
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "MB79_TARGET": (
        "MB79_TARGET",
        dict(
            marker="1",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=GRY,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "KB_TARGET": (
        "KB_TARGET",
        dict(
            marker="1",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=GRY,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "MB79_DET_REPR": (
        "MB79_DET_REPR",
        dict(
            marker="1",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MEC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "MB79_TRACK_MOV": (
        "MB79_TRACK - Moving",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec="g",
            mfc=MFC,
            color="g",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "MB79_TRACK_STAT": (
        "MB79_TRACK - Stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc="r",
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "KB_TRACK_MOV": (
        "KB_TRACK - Moving",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec="g",
            mfc=MFC,
            color="g",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "KB_TRACK_STAT": (
        "KB_TRACK - Stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc="r",
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "KB_TRACK_STOP": (
        "KB_TRACK - Stopped",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "KB_TRACK_UNK": (
        "KB_TRACK - Unknown",
        dict(
            marker=".",
            ms=MS,
            mew=MEW * 2,
            mec="k",
            mfc="k",
            color="k",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "MB79_KB_WARNING_TRACK": (
        "KB Warning Track",
        dict(
            marker=SOUND_LINES,
            ms=MS * 2.0,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "FURUKAWA_TARGET": (
        "FURUKAWA_TARGET",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec="g",
            mfc=MFC,
            color="g",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CONTI_ARS430_MOVING": (
        "CONTI_ARS430-Moving",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec="g",
            mfc=MFC,
            color="g",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CONTI_ARS430_STOPPED": (
        "CONTI_ARS430-Stopped",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CONTI_ARS430_STAT": (
        "CONTI_ARS430-Stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CONTI_SRR320": (
        "CONTI_SRR320",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec="g",
            mfc=MFC,
            color="g",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CONTI_AEBS_WARNING": (
        "ContiARS430 AEBS Warning",
        dict(
            marker=SOUND_LINES,
            ms=MS * 1.5,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CONTI_ARS440_MOVING": (
        "CONTI_ARS440-Moving",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec="g",
            mfc=MFC,
            color="g",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CONTI_ARS440_STOPPED": (
        "CONTI_ARS440-Stopped",
        dict(
            marker="v",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "CONTI_ARS440_STAT": (
        "CONTI_ARS440-Stationary",
        dict(
            marker="x",
            ms=MS,
            mew=MEW * 2,
            mec="r",
            mfc=MFC,
            color="r",
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "VBOX_OBJ": (
        "VBox Object",
        dict(
            marker="^",
            ms=MS,
            mew=MEW * 2,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "NONE_TYPE": (
        "NoneType",
        dict(
            marker="",
            ms=MS,
            mew=MEW,
            mec=MEC,
            mfc=MFC,
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "NOT_GUARDRAIL": (
        "Not Guardrail object",
        dict(
            marker="$q$",
            ms=MS,
            mew=1,
            mec="k",
            mfc="k",
            color=COL,
            ls=LS,
            lw=LW,
            alpha=ALP,
        ),
    ),
    "KB_INFO_AREA": (
        "KB_INFO_AREA",
        dict(
            marker="s",
            ms=MS * 2,
            mew=MEW,
            mec=YEL,
            mfc=YEL,
            color=YEL,
            ls=LS,
            lw=LW,
            alpha=0.5,
            fill=1,
        ),
    ),
    "KB_HAZARD_AREA": (
        "KB_HAZARD_AREA",
        dict(
            marker="s",
            ms=MS * 2,
            mew=MEW,
            mec="r",
            mfc="r",
            color="r",
            ls=LS,
            lw=LW,
            alpha=0.3,
            fill=1,
        ),
    ),
    "KB_CLUSTERS": (
        "KB_CLUSTERS",
        dict(
            marker="s",
            ms=MS * 2,
            mew=MEW,
            mec="b",
            mfc=MFC,
            color="b",
            ls=LS,
            lw=LW,
            alpha=ALP,
            fill=0,
        ),
    ),
}
""":type: dict
Container of legend and display style definitions {GroupType<str> : (Legend<str>, DisplayStyle<dict>), }"""

# setting up guardrail display properties
for type_name in gtps.OHL_GUARDRAILS:
    LegendValues[type_name] = "CVR3_OHL - Guardrail", dict(
        marker="d", ms=8, mew=MEW, mec="y", mfc="y", color="y", ls="-", lw=2, alpha=ALP
    )
for type_name in gtps.FUS_GUARDRAILS:
    LegendValues[type_name] = "CVR3_FUS - Guardrail", dict(
        marker="d", ms=8, mew=MEW, mec="m", mfc="m", color="m", ls="-", lw=2, alpha=ALP
    )
